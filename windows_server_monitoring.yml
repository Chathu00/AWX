- name: Manage Windows Server Tasks
  hosts: winserverhost
  gather_facts: no

  vars:
    remote_log_path: "C:\\logs\\app.log"  # Ensure this is set in AWX Inventory
    retrieved_log_path: "C:\\logs\\fetched_logs.txt"
    process_to_kill: "abc"  # Example process

  tasks:
    - name: Debug remote_log_path variable
      debug:
        msg: "Log file path: {{ remote_log_path }}"

    - name: Ensure remote_log_path is defined and not empty
      fail:
        msg: "Variable remote_log_path is not defined or empty!"
      when: remote_log_path is not defined or remote_log_path | trim == ""

    - name: Fetch log file from Windows server
      win_shell: "Get-Content '{{ remote_log_path }}' -Tail 50"
      register: log_output
      ignore_errors: yes  # Prevents playbook failure if file does not exist

    - name: Save log output locally
      copy:
        content: "{{ log_output.stdout | default('No logs found!') }}"
        dest: "{{ retrieved_log_path }}"

    - name: Display scraped logs
      debug:
        msg: "{{ log_output.stdout_lines | default(['No logs retrieved.']) }}"

    - name: Check high CPU and memory usage processes
      win_shell: |
        Get-Process | Sort-Object -Descending CPU | Select-Object -First 5 Name,CPU,Id
      register: process_output

    - name: Display high resource-consuming processes
      debug:
        msg: "{{ process_output.stdout_lines }}"

    - name: Check disk utilization
      win_shell: "Get-PSDrive C | Select-Object Used,Free,UsedPercent"
      register: disk_usage

    - name: Display disk usage
      debug:
        msg: "{{ disk_usage.stdout_lines }}"

    - name: Kill a process if running
      win_shell: |
        $process = Get-Process -Name '{{ process_to_kill }}' -ErrorAction SilentlyContinue
        if ($process) { Stop-Process -Name '{{ process_to_kill }}' -Force }
      ignore_errors: yes
