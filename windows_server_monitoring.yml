- name: Windows Server Monitoring
  hosts: 10.112.0.10
  gather_facts: yes
  tasks:

    - name: Copy log file from Windows Server
      win_copy:
        src: "C:\\logs\\app.log"
        dest: "C:\\Users\\Administrator\\Downloads\\app.log"
      register: copy_status
      ignore_errors: yes

    - name: Display file copy status
      debug:
        msg: 
          - "File Copy Status:"
          - "{{ copy_status.stdout | default('No output') }}"

    - name: Read log file for specific time duration
      win_shell: |
        Select-String -Path "C:\\logs\\app.log" -Pattern "2025-02-01 10:00", "2025-02-01 12:00"
      register: log_results
      ignore_errors: yes

    - name: Display logs for specific duration
      debug:
        msg: 
          - "Log Entries from 10:00 to 12:00:"
          - "{{ log_results.stdout_lines | default(['No logs found']) }}"

    - name: Check high CPU and Memory usage processes
      win_shell: |
        Get-Process | Where-Object { $_.CPU -gt 50 -or $_.WS -gt 500MB } | Select-Object ProcessName, ID, CPU, WS
      register: high_usage_processes
      ignore_errors: yes

    - name: Display high CPU/Memory processes
      debug:
        msg: 
          - "High CPU/Memory Usage Processes:"
          - "{{ high_usage_processes.stdout_lines | default(['No high CPU/memory processes found']) }}"

    - name: Check disk utilization
      win_shell: |
        Get-PSDrive C | Select-Object Used, Free, @{Name='UsagePercent';Expression={[math]::Round(($_.Used / ($_.Used + $_.Free) * 100),2)}}
      register: disk_usage
      ignore_errors: yes

    - name: Display disk utilization
      debug:
        msg: 
          - "Disk Utilization Details:"
          - "{{ disk_usage.stdout_lines | default(['No data available']) }}"

    - name: Kill high CPU process (Replace with actual PID)
      win_shell: "taskkill /F /PID 1884"
      register: kill_process_status
      ignore_errors: yes

    - name: Display process kill status
      debug:
        msg: 
          - "Process Termination Status:"
          - "{{ kill_process_status.stdout_lines | default(['No process killed or incorrect PID']) }}"


