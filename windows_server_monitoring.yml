---
- name: Windows Server Monitoring & Management
  hosts: windows_servers
  gather_facts: no
  vars:
    server:
      name: "aipo-dev-win"
      ip: "20.102.105.60"
      username: "windows_user"
      password: "THpW68qJw3Br!DX"  # Use Ansible Vault for secure storage
    log_path: "C:\\logs\\app.log"
    start_time: "02/01/2025 10:00"
    end_time: "02/02/2025 12:00"

  tasks:
    - name: Test WinRM connection
      win_ping:
      register: winrm_test
      until: winrm_test is success
      retries: 3
      delay: 5
      ignore_errors: yes

    - name: Fail if WinRM connection is not successful
      fail:
        msg: "Failed to connect to the Windows server via WinRM."
      when: winrm_test is failed

    - name: Fetch log files
      win_shell: Get-Content {{ log_path }} -Tail 10
      register: fetch_logs
      when: winrm_test is success

    - name: Save fetched logs to a local file
      copy:
        content: "{{ fetch_logs.stdout }}"
        dest: "./fetched_logs.txt"
      when: winrm_test is success

    - name: Scrape logs for a specific time range
      win_shell: |
        Get-EventLog -LogName Application -After "{{ start_time }}" -Before "{{ end_time }}" | Select-Object -First 10
      register: scraped_logs
      when: winrm_test is success

    - name: Save scraped logs to a local file
      copy:
        content: "{{ scraped_logs.stdout }}"
        dest: "./scraped_logs.txt"
      when: winrm_test is success

    - name: Check high CPU and memory usage
      win_shell: |
        Get-Process | Sort-Object -Descending CPU | Select-Object -First 10 Name,CPU,Id
        Get-Process | Sort-Object -Descending WS | Select-Object -First 10 Name,WS,Id
      register: process_usage
      when: winrm_test is success

    - name: Save CPU and memory usage details to a local file
      copy:
        content: "{{ process_usage.stdout }}"
        dest: "./process_usage.txt"
      when: winrm_test is success

    - name: Check disk utilization
      win_shell: Get-PSDrive C | Select-Object Used,Free,UsedPercent
      register: disk_utilization
      when: winrm_test is success

    - name: Save disk utilization details to a local file
      copy:
        content: "{{ disk_utilization.stdout }}"
        dest: "./disk_utilization.txt"
      when: winrm_test is success

    - name: Prompt user to kill a process
      pause:
        prompt: "Do you want to kill a process? (yes/no)"
      register: kill_choice
      when: winrm_test is success

    - name: Kill a process if user chooses to
      win_shell: Stop-Process -Id {{ pid }} -Force
      vars:
        pid: "{{ lookup('prompt', 'Enter the PID of the process to terminate: ') }}"
      when: kill_choice.user_input == 'yes' and winrm_test is success
