---
- name: Windows Server Monitoring and Management
  hosts: windows
  gather_facts: no
  tasks:

    - name: Fetch the last 10 lines of the log file
      ansible.windows.win_shell: |
        Get-Content C:\logs\app.log -Tail 10
      register: log_output

    - name: Save fetched logs to local file
      copy:
        content: "{{ log_output.stdout | default('No logs found') }}"
        dest: ./fetched_logs.txt
      delegate_to: localhost

    - name: Scrape logs from a specific time range
      ansible.windows.win_shell: |
        Get-EventLog -LogName Application -After "02/01/2025 10:00" -Before "02/02/2025 12:00" | Select-Object -First 10
      register: scraped_logs

    - name: Save scraped logs to local file
      copy:
        content: "{{ scraped_logs.stdout | default('No logs found') }}"
        dest: ./scraped_logs.txt
      delegate_to: localhost

    - name: Get top 10 CPU-consuming processes
      ansible.windows.win_shell: |
        Get-Process | Sort-Object -Descending CPU | Select-Object -First 10 Name,CPU,Id
      register: cpu_usage

    - name: Get top 10 Memory-consuming processes
      ansible.windows.win_shell: |
        Get-Process | Sort-Object -Descending WS | Select-Object -First 10 Name,WS,Id
      register: memory_usage

    - name: Save process usage details
      copy:
        content: |
          Top 10 CPU-consuming processes:
          {{ cpu_usage.stdout | default('No process data') }}

          Top 10 Memory-consuming processes:
          {{ memory_usage.stdout | default('No process data') }}
        dest: ./process_usage.txt
      delegate_to: localhost

    - name: Get disk utilization
      ansible.windows.win_shell: |
        Get-PSDrive C | Select-Object Used,Free,UsedPercent
      register: disk_usage

    - name: Save disk utilization details
      copy:
        content: "{{ disk_usage.stdout | default('No disk data') }}"
        dest: ./disk_utilization.txt
      delegate_to: localhost

    - name: Display all outputs
      debug:
        msg:
          - "✅ Logs saved to fetched_logs.txt"
          - "✅ Scraped logs saved to scraped_logs.txt"
          - "✅ Process details saved to process_usage.txt"
          - "✅ Disk usage details saved to disk_utilization.txt"

    - name: Ask if user wants to kill a process
      pause:
        prompt: "Do you want to kill a process? (yes/no)"
      register: kill_decision

    - name: Get PID to kill
      pause:
        prompt: "Enter the PID of the process to terminate:"
      register: process_id
      when: kill_decision.user_input | lower == "yes"

    - name: Kill the process
      ansible.windows.win_shell: |
        Stop-Process -Id {{ process_id.user_input }} -Force
      when: kill_decision.user_input | lower == "yes"
      ignore_errors: yes

    - name: Display final message
      debug:
        msg: "✅ Process {{ process_id.user_input }} terminated successfully."
      when: kill_decision.user_input | lower == "yes"
