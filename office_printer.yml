- name: Office Printer Automation (Non-Interactive) 
  hosts: windows_host
  gather_facts: no

  vars:
    printer_name: "OfficePrinter1"       # Define this in AWX or inventory
    printer_ip: "192.168.1.50"           # Define this in AWX or inventory
    driver_path: "C:\\Path\\To\\Driver.inf"  # Replace with actual driver path if installing manually

  tasks:

    # 1️⃣ Check Wi-Fi Connection
    - name: Get Wi-Fi Connection Details
      win_shell: |
        (Get-NetAdapter -InterfaceDescription "*Wireless*").InterfaceAlias
      register: wifi_status
      ignore_errors: yes

    - name: Show Wi-Fi Connection Status
      debug:
        msg: "🔍 User is connected to Wi-Fi: {{ wifi_status.stdout }}"
      when: wifi_status.stdout | length > 0

    # 2️⃣ Check if printer IP exists in ports
    - name: Get Printer Ports
      win_shell: |
        Get-PrinterPort | Select-Object -ExpandProperty Name
      register: printer_ports

    - name: Fail if Printer IP not found
      fail:
        msg: "❌ Printer IP {{ printer_ip }} not found in ports. Please pre-configure or automate IP addition."
      when: printer_ip not in printer_ports.stdout_lines

    # 3️⃣ Printer Driver Setup
    - name: Install Printer Driver (if required)
      win_shell: |
        pnputil /add-driver "{{ driver_path }}" /install
      register: driver_install_result
      ignore_errors: yes

    - name: Show Installed Drivers
      win_shell: |
        Get-PrinterDriver | Select-Object -ExpandProperty Name
      register: installed_driver_name

    # 4️⃣ Add Printer
    - name: Add Printer with IP
      win_shell: |
        Add-Printer -Name "{{ printer_name }}" -PortName "{{ printer_ip }}" -DriverName "{{ installed_driver_name.stdout_lines[0] }}"
      register: printer_install_result
      ignore_errors: yes

    - name: Show Printer Setup Status
      debug:
        msg: "🖨️ Printer '{{ printer_name }}' has been added successfully using IP {{ printer_ip }}"

    # 5️⃣ Set Default Printer
    - name: Set Printer as Default
      win_shell: |
        (Get-WmiObject -Query "SELECT * FROM Win32_Printer WHERE Name = '{{ printer_name }}'").SetDefaultPrinter()
      register: default_result
      ignore_errors: yes

    - name: Debug - Default Printer Set
      debug:
        msg: "✅ '{{ printer_name }}' is set as the default printer."

    # 6️⃣ Clear Stuck Print Jobs
    - name: Find Stuck Print Jobs
      win_shell: |
        Get-Printer | ForEach-Object { 
          Get-PrintJob -PrinterName $_.Name | Where-Object { $_.JobStatus -match "Error" }
        }
      register: stuck_jobs

    - name: Remove Stuck Print Jobs
      win_shell: |
        Get-Printer | ForEach-Object { 
          Get-PrintJob -PrinterName $_.Name | Where-Object { $_.JobStatus -match "Error" } | 
          ForEach-Object { Remove-PrintJob -PrinterName $_.Name -ID $_.ID }
        }
      when: stuck_jobs.stdout | length > 0

    - name: Save Stuck Jobs to XML
      win_shell: |
        $outputPath = "C:\\Users\\Public\\Documents\\FailedPrintJobs\\StuckJobs.xml"
        $jobs = Get-Printer | ForEach-Object { 
          Get-PrintJob -PrinterName $_.Name | Where-Object { $_.JobStatus -match "Error" }
        }
        $jobs | Export-Clixml -Path $outputPath
      when: stuck_jobs.stdout | length > 0

    - name: Debug - Stuck Jobs Handled
      debug:
        msg: "🚀 Stuck print jobs removed and saved at C:\\Users\\Public\\Documents\\FailedPrintJobs\\StuckJobs.xml"

    # 7️⃣ Ensure Printer is Online
    - name: Get Printer Status
      win_shell: |
        (Get-Printer -Name "{{ printer_name }}").PrinterStatus
      register: printer_status

    - name: Restart Spooler if Offline
      win_shell: |
        Restart-Service Spooler
      when: "'Offline' in printer_status.stdout"

    - name: Debug - Final Printer Status
      debug:
        msg: "✅ Printer '{{ printer_name }}' is online and ready."
