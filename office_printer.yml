- name: Office Printer Automation - Reliable Demo Version
  hosts: windows_host
  gather_facts: no

  vars:
    printer_name: "OfficePrinter1"
    printer_ip: "192.168.1.50"  # Replace with actual printer IP
    fallback_driver: "Microsoft Print To PDF"  # Replace with preferred working driver name

  tasks:

    - name: 🔍 Check if Printer Port Already Exists
      win_shell: |
        Get-PrinterPort | Select-Object -ExpandProperty Name
      register: printer_ports

    - name: 🧠 Set Printer IP Manually If Not Found
      set_fact:
        printer_ip: "{{ printer_ip }}"
      when: printer_ip not in printer_ports.stdout_lines

    - name: ➕ Add Printer Port (If Not Exists)
      win_shell: |
        if (-not (Get-PrinterPort -Name "{{ printer_ip }}" -ErrorAction SilentlyContinue)) {
          Add-PrinterPort -Name "{{ printer_ip }}" -PrinterHostAddress "{{ printer_ip }}"
        }
      register: port_result

    - name: 📋 List Installed Printer Drivers
      win_shell: Get-PrinterDriver | Select-Object -ExpandProperty Name
      register: installed_drivers

    - name: 🧠 Set Default Driver Name If Not Set
      set_fact:
        driver_to_use: "{{ fallback_driver if fallback_driver in installed_drivers.stdout_lines else installed_drivers.stdout_lines[0] }}"

    - name: 🖨️ Add Printer Using IP and Driver
      win_shell: |
        Add-Printer -Name "{{ printer_name }}" -PortName "{{ printer_ip }}" -DriverName "{{ driver_to_use }}"
      register: printer_add_result
      ignore_errors: yes

    - name: ✅ Debug - Printer Setup Status
      debug:
        msg: "🖨️ Printer '{{ printer_name }}' installed using driver: {{ driver_to_use }}"

    - name: 🌟 Set Printer as Default
      win_shell: |
        (Get-Printer -Name "{{ printer_name }}" -ErrorAction SilentlyContinue) | Set-ItemProperty -Name IsDefault -Value $true
      ignore_errors: yes

    - name: 🧾 Get Current Default Printer
      win_shell: |
        (Get-Printer | Where-Object { $_.IsDefault -eq $true }).Name
      register: default_printer

    - name: ✅ Debug - Default Printer Status
      debug:
        msg: "🎯 Current default printer is: {{ default_printer.stdout }}"

    - name: 🧹 Remove Stuck Print Jobs
      win_shell: |
        Get-Printer | ForEach-Object {
          Get-PrintJob -PrinterName $_.Name -ErrorAction SilentlyContinue |
          Where-Object { $_.JobStatus -match "Error" } |
          ForEach-Object { Remove-PrintJob -PrinterName $_.Name -ID $_.ID }
        }

    - name: 💾 Export Stuck Print Jobs (If Any)
      win_shell: |
        $outputPath = "C:\\Users\\Public\\Documents\\FailedPrintJobs\\StuckJobs.xml"
        $jobs = Get-Printer | ForEach-Object {
          Get-PrintJob -PrinterName $_.Name -ErrorAction SilentlyContinue |
          Where-Object { $_.JobStatus -match "Error" }
        }
        if ($jobs) { $jobs | Export-Clixml -Path $outputPath }

    - name: ✅ Debug - Final Confirmation
      debug:
        msg: |
          🎉 Printer '{{ printer_name }}' setup completed successfully!
          ✅ Driver Used: {{ driver_to_use }}
          ✅ Printer IP: {{ printer_ip }}
          ✅ Default Printer: {{ default_printer.stdout }}
          📁 Stuck Jobs Saved (if any): C:\Users\Public\Documents\FailedPrintJobs\StuckJobs.xml
