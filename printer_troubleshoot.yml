- name: Printer Troubleshooting Automation
  hosts: windows_host
  gather_facts: no

  tasks:
    # 1Ô∏è‚É£ Check Connection to Windows Server
    - name: Check Connection to Windows Server
      win_ping:
      register: connection_status
      ignore_unreachable: yes

    # 2Ô∏è‚É£ Handle Connection Failure (Stop Execution if Unreachable)
    - name: Handle Connection Failure
      block:
        - name: Display Failure Message
          debug:
            msg: >
              "‚ùå Failed to connect to the Windows server. Possible reasons:
              - Incorrect IP address or unreachable network.
              - WinRM service is not running on the target machine.
              - Authentication failure due to incorrect credentials.
              - Firewall rules blocking WinRM access.
              - The server is down or experiencing issues."
        
        - name: Stop Execution
          meta: end_play
      when: connection_status.unreachable is defined and connection_status.unreachable

    - name: Confirm Connection Success
      debug:
        msg: "‚úÖ Connected successfully to the Windows server. Starting troubleshooting..."

    # 3Ô∏è‚É£ Clear Stuck Print Jobs
    - name: Clear Stuck Print Jobs
      win_shell: |
        Get-Printer | ForEach-Object { 
          Get-PrintJob -PrinterName $_.Name | ForEach-Object { 
            Remove-PrintJob -PrinterName $_.Name -ID $_.ID 
          } 
        }
      register: clear_jobs_result
      when: issue_type == "stuck_jobs" or issue_type == "all"
      ignore_errors: yes

    - name: Debug - Print Job Clearing Status
      debug:
        msg: "üñ®Ô∏è Cleared stuck print jobs successfully!"
      when: issue_type == "stuck_jobs" or issue_type == "all" and clear_jobs_result is succeeded

    # 4Ô∏è‚É£ Restart Print Spooler Service
    - name: Restart Print Spooler Service
      win_service:
        name: Spooler
        state: restarted
      register: spooler_restart
      when: issue_type == "spooler_restart" or issue_type == "all"

    - name: Debug - Print Spooler Restart Status
      debug:
        msg: "üîÑ Print Spooler service restarted successfully!"
      when: issue_type == "spooler_restart" or issue_type == "all" and spooler_restart is succeeded

    # 5Ô∏è‚É£ Fix Printer Showing Offline
    - name: Fix Printer Showing Offline
      win_shell: |
        $printers = Get-Printer | Where-Object { $_.PrinterStatus -eq 'Offline' }
        foreach ($printer in $printers) {
            Restart-Service Spooler
            Start-Sleep -Seconds 5
            Write-Host "Checking status again..."
            $newStatus = (Get-Printer -Name $printer.Name).PrinterStatus
            if ($newStatus -ne 'Offline') {
                Write-Host "‚úÖ Printer $($printer.Name) is now online."
            } else {
                Write-Host "‚ùå Printer $($printer.Name) is still offline."
            }
        }
      register: printer_offline_fix
      when: issue_type == "offline_status" or issue_type == "all"

    - name: Debug - Printer Offline Fix Status
      debug:
        msg: "üìå Printer offline issue checked and attempted to fix."
      when: issue_type == "offline_status" or issue_type == "all"

    # 6Ô∏è‚É£ Detect Installed Printer Model
    - name: Detect Installed Printer Model
      win_shell: |
        (Get-Printer | Select-Object -ExpandProperty DriverName) -join ', '
      register: installed_printer_driver
      when: issue_type == "driver_update" or issue_type == "all"

    - name: Debug - Show Installed Driver
      debug:
        msg: "üîç Installed Printer Driver(s): {{ installed_printer_driver.stdout }}"
      when: issue_type == "driver_update" or issue_type == "all"
