- name: Printer Troubleshooting Automation
  hosts: windows
  gather_facts: no

  tasks:

    # üîç 1Ô∏è‚É£ Check Connection to Windows Server
    - name: Check Connection to Windows Server
      win_ping:
      register: connection_status
      ignore_unreachable: yes  # Allows custom handling instead of immediate failure

    - name: Handle Connection Failure (Stop Execution if Unreachable)
      block:
        - name: Display Failure Message
          debug:
            msg: >
              "‚ùå Failed to connect to the Windows server. Possible reasons:
              - Incorrect IP address or unreachable network.
              - WinRM service is not running on the target machine.
              - Authentication failure due to incorrect credentials.
              - Firewall rules blocking WinRM access.
              - The server is down or experiencing issues."
        
        - name: Stop Execution
          meta: end_play
      when: connection_status.unreachable is defined and connection_status.unreachable

    - name: Confirm Connection Success
      debug:
        msg: "‚úÖ Connected successfully to the Windows server. Starting troubleshooting..."

    # üñ®Ô∏è 2Ô∏è‚É£ Clear Stuck Print Jobs
    - name: Clear Stuck Print Jobs
      win_shell: |
        Get-Printer | ForEach-Object { Remove-PrintJob -PrinterName $_.Name }
      when: issue_type == "stuck_jobs" or issue_type == "all"
      ignore_errors: yes

    # üîÑ 3Ô∏è‚É£ Restart Print Spooler Service
    - name: Restart Print Spooler Service
      win_service:
        name: Spooler
        state: restarted
      when: issue_type == "spooler_restart" or issue_type == "all"

    # üåê 4Ô∏è‚É£ Check Printer Connectivity (Optional)
    - name: Check Printer Connectivity
      win_shell: |
        if ("{{ printer_ip | default('') }}" -ne "") {
          Test-Connection -ComputerName {{ printer_ip }} -Count 2
        } else {
          Write-Output "Skipping connectivity check: No printer IP provided."
        }
      register: ping_result
      when: issue_type == "connectivity" or issue_type == "all"
      ignore_errors: yes

    - name: Show Connectivity Result
      debug:
        msg: "{{ ping_result.stdout_lines }}"
      when: issue_type == "connectivity" or issue_type == "all"

    # ‚ùå 5Ô∏è‚É£ Fix Printer Showing Offline
    - name: Fix Printer Showing Offline
      win_shell: |
        Get-Printer | ForEach-Object { Set-Printer -Name $_.Name -Online }
      when: issue_type == "offline_status" or issue_type == "all"

    # üéØ 6Ô∏è‚É£ Set Correct Default Printer
    - name: Set Correct Default Printer
      win_shell: |
        $defaultPrinter = Get-Printer | Where-Object { $_.IsDefault -eq $true }
        if (-not $defaultPrinter) {
          $printerList = Get-Printer
          if ($printerList) {
            Set-Printer -Name ($printerList[0].Name) -Default
          }
        }
      when: issue_type == "offline_status" or issue_type == "all"

    # üîç 7Ô∏è‚É£ Detect Installed Printer Model
    - name: Detect Installed Printer Model
      win_shell: |
        (Get-Printer | Select-Object -ExpandProperty DriverName) -join ', '
      register: installed_printer_driver
      when: issue_type == "driver_update" or issue_type == "all"

    - name: Debug - Show Installed Driver
      debug:
        msg: "Installed Printer Driver: {{ installed_printer_driver.stdout }}"
      when: issue_type == "driver_update" or issue_type == "all"
