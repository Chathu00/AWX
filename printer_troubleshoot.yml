- name: Printer Troubleshooting Automation
  hosts: windows_host
  gather_facts: no

  tasks:
    # 1️⃣ Check Connection to Windows Server
    - name: Check Connection to Windows Server
      win_ping:
      register: connection_status
      ignore_unreachable: yes

    # 2️⃣ Handle Connection Failure (Stop Execution if Unreachable)
    - name: Handle Connection Failure (Stop Execution if Unreachable)
      block:
        - name: Display Failure Message
          debug:
            msg: >
              "❌ Failed to connect to the Windows server. Possible reasons:
              - Incorrect IP address or unreachable network.
              - WinRM service is not running on the target machine.
              - Authentication failure due to incorrect credentials.
              - Firewall rules blocking WinRM access.
              - The server is down or experiencing issues."

        - name: Stop Execution
          meta: end_play
      when: connection_status.unreachable is defined and connection_status.unreachable

    # 3️⃣ Confirm Connection Success
    - name: Confirm Connection Success
      debug:
        msg: "✅ Connected successfully to the Windows server. Proceeding with troubleshooting..."

    # 4️⃣ Clear Stuck Print Jobs
    - name: Clear Stuck Print Jobs
      win_shell: |
        Get-Printer | ForEach-Object { Remove-PrintJob -PrinterName $_.Name }
      when: issue_type == "stuck_jobs" or issue_type == "all"
      ignore_errors: yes

    # 5️⃣ Restart Print Spooler Service
    - name: Restart Print Spooler Service
      win_service:
        name: Spooler
        state: restarted
      when: issue_type == "spooler_restart" or issue_type == "all"

    # 6️⃣ Check Printer Connectivity
    - name: Check Printer Connectivity
      win_shell: |
        $result = Test-Connection -ComputerName {{ printer_ip | default('localhost') }} -Count 2 -ErrorAction SilentlyContinue
        if ($result) { $result | Out-String } else { "Connection failed" }
      register: ping_result
      when: issue_type == "connectivity" or issue_type == "all"
      ignore_errors: yes

    - name: Show Connectivity Result
      debug:
        msg: "{{ ping_result.stdout | default('No output received') }}"
      when: issue_type == "connectivity" or issue_type == "all"

    # 7️⃣ Fix Printer Showing Offline
    - name: Fix Printer Showing Offline
      win_shell: |
        Get-Printer | ForEach-Object { Set-Printer -Name $_.Name -Online }
      when: issue_type == "offline_status" or issue_type == "all"

    # 8️⃣ Set Correct Default Printer
    - name: Set Correct Default Printer
      win_shell: |
        $defaultPrinter = Get-Printer | Where-Object { $_.IsDefault -eq $true }
        if (-not $defaultPrinter) {
          $printerList = Get-Printer
          if ($printerList) {
            Set-Printer -Name ($printerList[0].Name) -Default
          }
        }
      when: issue_type == "offline_status" or issue_type == "all"

    # 9️⃣ Detect Installed Printer Model
    - name: Detect Installed Printer Model
      win_shell: |
        (Get-Printer | Select-Object -ExpandProperty DriverName) -join ', '
      register: installed_printer_driver
      when: issue_type == "driver_update" or issue_type == "all"

    - name: Debug - Show Installed Driver
      debug:
        msg: "Installed Printer Driver: {{ installed_printer_driver.stdout | default('No driver information found') }}"
      when: issue_type == "driver_update" or issue_type == "all"
